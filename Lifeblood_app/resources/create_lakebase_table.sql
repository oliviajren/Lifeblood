-- Create the lifeblood_app Delta table with Lakebase support
-- This script creates the Delta table and enables Change Data Feed for Lakebase syncing

-- Drop existing Lakebase table if it exists (to handle schema changes)
DROP TABLE IF EXISTS livr.lifeblood.lifeblood_app_lb;

-- Create the Lakebase Delta table with optimized schema for syncing
CREATE TABLE livr.lifeblood.lifeblood_app_lb (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    
    -- Form metadata
    form_date DATE NOT NULL,
    inspector_name STRING NOT NULL,
    user_email STRING NOT NULL,
    submission_time TIMESTAMP NOT NULL,
    
    -- Equipment condition checks
    donation_chairs_condition STRING NOT NULL,
    blood_collection_equipment_condition STRING NOT NULL,
    monitoring_devices_condition STRING NOT NULL,
    safety_equipment_condition STRING NOT NULL,
    
    -- Donor information and compliance
    donor_name STRING NOT NULL,
    donor_contact_number STRING NOT NULL,
    donor_health_screening_completed BOOLEAN NOT NULL,
    donor_consent_form_completed BOOLEAN NOT NULL,
    
    -- Additional notes
    notes STRING,
    
    -- System fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP(),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
) USING DELTA
TBLPROPERTIES (
  'delta.feature.allowColumnDefaults' = 'supported',
  'delta.enableChangeDataFeed' = 'true',
  'delta.autoOptimize.optimizeWrite' = 'true',
  'delta.autoOptimize.autoCompact' = 'true'
)
COMMENT 'Lifeblood Red Cross Australia donor center inspection form submissions - Lakebase enabled';

-- Note: Unity Catalog doesn't support CREATE INDEX
-- Performance optimization is handled automatically by Delta Lake

-- Grant permissions to the app owner
GRANT USAGE ON CATALOG livr TO `olivia.ren@databricks.com`;
GRANT USAGE ON SCHEMA livr.lifeblood TO `olivia.ren@databricks.com`;
GRANT SELECT ON TABLE livr.lifeblood.lifeblood_app_lb TO `olivia.ren@databricks.com`;
GRANT MODIFY ON TABLE livr.lifeblood.lifeblood_app_lb TO `olivia.ren@databricks.com`;

-- Note: Lakebase synced table creation
-- The synced table (lifeblood_app_lb_synced) will be created through:
-- 1. Databricks UI: Catalog > Table > Create Synced Table
-- 2. Or via the lakebase_setup.py script
-- 3. Or via SQL (when API becomes available):
--    CREATE TABLE livr.lifeblood.lifeblood_app_lb_synced
--    SYNC FROM livr.lifeblood.lifeblood_app_lb
--    TO LAKEBASE CONNECTION 'lifeblood_lakebase_instance'
--    DATABASE 'lifeblood_operational'
--    WITH (sync_mode = 'CONTINUOUS', primary_key = ('id'));
